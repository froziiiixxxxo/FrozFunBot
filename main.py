import telebot
from telebot import TeleBot, types
import random

# –ü–ï–†–ï–ú–ï–ù–ù–´–ï
commands = """/coin - –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É –∏ –Ω–∞ —Ä–∞–Ω–¥–æ–º –≤—ã–≤–æ–¥–∏—Ç: "–û—Ä–µ–ª" –∏–ª–∏ "–†–µ—à–∫–∞"
/number - –≤—ã–≤–æ–¥–∏—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10000

/cuefa - –∏–≥—Ä–∞ –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞
/secret_number - –∏–≥—Ä–∞ –≤ —É–≥–∞–¥–∞–π —á–∏—Å–ª–æ
/tasks - –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∫–∏
/dice - –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫—É–±–∏–∫ –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6

/help - –ø–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞
/commands - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"""

user_tasks = {}

choices = ['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞']
playing_cuefa = set()

API_TOKEN = 'my token'
bot = telebot.TeleBot(API_TOKEN)

secret_number = None
attempts = 0

# –°–¢–ê–†–¢
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, """
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –º–µ–Ω—è –∑–æ–≤—É—Ç FrozFunBot, —è —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç.
–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥ –ø–æ–¥ –∫–æ–º–∞–Ω–¥–æ–π /commands
""")


# –ü–û–ú–û–©–¨
@bot.message_handler(commands=['help'])
def send_help(message):
    bot.reply_to(message, """
–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ - /commands
–°–≤—è–∑—å —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º - @user
–ù–∞—à–ª–∏ –æ—à–∏–±–∫—É? –ü–∏—à–∏—Ç–µ - @user
""")


# –û–†–ï–õ –ò –†–ï–®–ö–ê
@bot.message_handler(commands=['coin'])
def send_coin(message):
    bot.reply_to(message, random.choice(['–û—Ä–µ–ª', '–†–µ—à–∫–∞']))
    bot.reply_to(message, "–ò–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? - /coin")


# –†–ê–ù–î–û–ú –ß–ò–°–õ–û
@bot.message_handler(commands=['number'])
def send_number(message):
    random_number = random.randint(0, 10000)
    bot.reply_to(message, random_number)


# –ö–ê–ú–ï–ù–¨ –ù–û–ñ–ù–ò–¶–´ –ë–£–ú–ê–ì–ê
@bot.message_handler(commands=['cuefa'])
def start_game(message):
    bot.send_message(message.chat.id, "–î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ '–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞'! –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞.")

@bot.message_handler(func=lambda message: message.text.lower() in choices)
def play_game(message):
    user_choice = message.text.lower()
    bot_choice = random.choice(choices)
    result = determine_winner(user_choice, bot_choice)

    response = f"–¢—ã –≤—ã–±—Ä–∞–ª: {user_choice}\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {bot_choice}\n{result}"
    bot.send_message(message.chat.id, response)

def determine_winner(user, bot):
    if user == bot:
        return "‚öîÔ∏è –ù–∏—á—å—è! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ, —Ç–æ –≤—ã–±–µ—Ä–∏ —Å–Ω–æ–≤–∞."
    elif (user == '–∫–∞–º–µ–Ω—å' and bot == '–Ω–æ–∂–Ω–∏—Ü—ã') or \
         (user == '–Ω–æ–∂–Ω–∏—Ü—ã' and bot == '–±—É–º–∞–≥–∞') or \
         (user == '–±—É–º–∞–≥–∞' and bot == '–∫–∞–º–µ–Ω—å'):
        return "üéâ–¢—ã –≤—ã–∏–≥—Ä–∞–ª! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ, —Ç–æ –≤—ã–±–µ—Ä–∏ —Å–Ω–æ–≤–∞."
    else:
        return "‚òπÔ∏è–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ, —Ç–æ –≤—ã–±–µ—Ä–∏ —Å–Ω–æ–≤–∞."""
    

# –ó–ê–î–ê–ß–ö–ò
def generate_task():
    num1 = random.randint(1, 10) # –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ
    num2 = random.randint(1, 10) #–≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ
    operation = random.choice(['+', '-', '*'])
    if operation == '+':
        answer = num1 + num2
    elif operation == '-':
        answer = num1 - num2
    else:
        answer = num1 * num2
    task = f"{num1} {operation} {num2} = ?"
    return task, answer

@bot.message_handler(commands=['tasks'])
def start_game(message):
    task, answer = generate_task()
    user_tasks[message.chat.id] = answer 
    bot.send_message(message.chat.id, f"–†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É: {task}")

@bot.message_handler(func=lambda message: message.chat.id in user_tasks)
def check_answer(message):
    correct_answer = user_tasks[message.chat.id]
    try:
        user_answer = int(message.text)
        if user_answer == correct_answer:
            bot.send_message(message.chat.id, "üéâ–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –ò–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? - /tasks")
            del user_tasks[message.chat.id] 
        else:
            bot.send_message(message.chat.id, "‚òπÔ∏è–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
    
    except ValueError:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

@bot.message_handler(commands=['stop'])
def stop_game(message):
    if message.chat.id in user_tasks:
        del user_tasks[message.chat.id]
        bot.send_message(message.chat.id, "–ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
        "–ò–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? - /tasks")


# –ò–ì–†–ê "–£–ì–ê–î–ê–ô –ß–ò–°–õ–û"
@bot.message_handler(commands=['secret_number'])
def start_secret_number_game(message):
    global secret_number, attempts
    secret_number = random.randint(1, 100)  # –∑–∞–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ
    attempts = 0
    bot.send_message(message.chat.id, "–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100, –ø–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!")


@bot.message_handler(func=lambda message: secret_number is not None and message.text.isdigit())
def guess_number(message):
    global attempts
    guess = int(message.text)
    attempts += 1

    if guess < secret_number:
        bot.send_message(message.chat.id, "‚ûï–ë–æ–ª—å—à–µ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
    elif guess > secret_number:
        bot.send_message(message.chat.id, "‚ûñ–ú–µ–Ω—å—à–µ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
    else:
        bot.send_message(message.chat.id, f"üéâ–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {secret_number} –∑–∞ {attempts} –ø–æ–ø—ã—Ç–æ–∫! –ò–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? - /secret_number")
        reset_game()  # c–±—Ä–æ—Å –∏–≥—Ä—ã


def reset_game():
    global secret_number, attempts
    secret_number = None
    attempts = 0


# –ö–£–ë–ò–ö
@bot.message_handler(commands=['dice'])
def send_number(message):
    random_number = random.randint(1, 6)
    bot.reply_to(message, f"üé≤–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {random_number}.  –ò–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? - /dice")


# –°–ü–ò–°–û–ö –ö–û–ú–ê–ù–î
@bot.message_handler(commands=['commands'])
def send_commands(message):
    bot.reply_to(message, commands)


if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")  # —Å–æ–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    bot.polling(none_stop=True)
